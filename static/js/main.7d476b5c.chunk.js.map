{"version":3,"sources":["components/search-box.component.jsx","components/form-list.component.jsx","redux/form.actions.js","components/form-field.component.jsx","data/forms.data.js","components/create-form.component.jsx","pages/home-page.component.jsx","components/form.component.jsx","pages/form-page.component.jsx","App.js","serviceWorker.js","redux/root-reducer.js","redux/form.reducer.js","redux/store.js","index.js"],"names":["SearchBox","className","placeholder","handleChange","Form","inline","FormControl","type","onChange","withRouter","searchField","history","filteredForms","useSelector","state","formList","filter","form","name","toLowerCase","includes","ListGroup","map","Item","key","action","onClick","push","encodeURI","FormListActions","FormField","fieldData","onDelete","InputGroup","defaultValue","event","target","value","Append","Text","Check","label","checked","required","Control","as","dataType","Button","variant","id","EMPTY_FORM","Date","FORM_DATA","description","createdAt","fields","CreateFormModal","props","dispatch","useDispatch","useState","formData","setFormData","handleDeleteField","field","handleFieldChange","foundIndex","findIndex","x","EMPTY_FIELD","Modal","animation","size","centered","Header","closeButton","Title","onSubmit","payload","onHide","preventDefault","Body","Group","controlId","Label","length","style","display","justifyContent","alignItems","Footer","HomePage","React","modalShow","setModalShow","setSearchField","Container","fluid","Row","Col","sm","mb","input","show","FormInstance","match","selectedForm","params","formId","to","isRequired","FormItem","FormPage","console","log","exact","path","component","App","Boolean","window","location","hostname","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d476b5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, FormControl } from \"react-bootstrap\";\r\n\r\nfunction SearchBox({ className, placeholder, handleChange }) {\r\n  return (\r\n    <Form inline>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        className={className}\r\n        onChange={handleChange}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nfunction FormList({ searchField, history }) {\r\n  const forms = useSelector((state) => state.formList);\r\n\r\n  const filteredForms = forms.formList.filter((form) =>\r\n    form.name.toLowerCase().includes(searchField.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <ListGroup>\r\n      {filteredForms.map((form) => (\r\n        <ListGroup.Item\r\n          key={form.name}\r\n          action\r\n          onClick={() => history.push(`/forms/${encodeURI(form.name.toLowerCase())}`)}\r\n        >\r\n          {form.name}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default withRouter(FormList);","export const FormListActions = {\r\n  CREATE_FORM: \"CREATE_FORM\",\r\n};\r\n\r\nexport const createForm = (formObject) => {\r\n  return {\r\n    type: \"CREATE_FORM\",\r\n    payload: formObject,\r\n  };\r\n};","import React from \"react\";\r\nimport { InputGroup, FormControl, Button, Form } from \"react-bootstrap\";\r\n\r\nconst FormField = ({ fieldData, onDelete, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl placeholder=\"Form AlanÄ±\" defaultValue={fieldData.name} onChange={(event) => handleChange({ ...fieldData, name: event.target.value })}/>\r\n\r\n        <InputGroup.Append>\r\n          <InputGroup.Text>\r\n            <div key={`inline-checkbox`}>\r\n              <Form.Check label=\"Zorunlu\" inline checked={fieldData.required} type=\"checkbox\"\r\n                onChange={(event) => handleChange({ ...fieldData, required: !fieldData.required })}/>\r\n            </div>\r\n          </InputGroup.Text>\r\n        </InputGroup.Append>\r\n\r\n        <InputGroup.Append>\r\n          <Form.Control as=\"select\"  onChange={(event) => handleChange({ ...fieldData, dataType: event.target.value })}>\r\n            <option defaultValue value=\"STRING\">Metin</option>\r\n            <option value=\"NUMBER\">SayÄ±</option>\r\n          </Form.Control>\r\n        </InputGroup.Append>\r\n\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\" onClick={() => onDelete(fieldData.id)}>Sil</Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","export const EMPTY_FORM = {\r\n  name: \"\",\r\n  description: \"\",\r\n  createdAt: Date(),\r\n  fields: [{ required: true, name: \"\", dataType: \"STRING\", id: 0}],\r\n};\r\n\r\nexport const FORM_DATA = {\r\n  formList: [\r\n    {\r\n      name: \"Test form\",\r\n      description: \"Uye bilgi formu\",\r\n      createdAt: \"2017-01-08\",\r\n      fields: [\r\n        { required: true, name: \"Ad\", dataType: \"STRING\" },\r\n        { required: true, name: \"Soyad\", dataType: \"STRING\" },\r\n        { required: false, name: \"YaÅ\", dataType: \"NUMBER\" },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createForm } from \"../redux/form.actions\";\r\nimport FormField from \"./form-field.component\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport { EMPTY_FORM } from \"../data/forms.data\";\r\n\r\nfunction CreateFormModal(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    createdAt: Date(),\r\n    fields: [{ required: true, name: \"\", dataType: \"STRING\", id: 0}],\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    dispatch(createForm(formData));\r\n    props.onHide();\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDeleteField = (id) => {\r\n    setFormData({...formData, fields: formData.fields.filter((field) => field.id !== id)});\r\n  };\r\n\r\n  const handleFieldChange = (field) => {\r\n    let fields = formData.fields;\r\n    const foundIndex = fields.findIndex((x) => x.id === field.id);\r\n    fields[foundIndex] = field;\r\n    setFormData({...formData, fields: fields});\r\n  };\r\n\r\n  const EMPTY_FIELD = EMPTY_FORM.fields[0];\r\n  \r\n  return (\r\n    <Modal animation={false} {...props} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Yeni Form OluÅtur\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Body>\r\n          <Form.Group controlId=\"formGridName\">\r\n            <Form.Label>Form AdÄ±:</Form.Label>\r\n            <Form.Control placeholder=\"Form AdÄ±\" value={formData.name} required onChange={(event) => setFormData({ ...formData, name: event.target.value })}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridDescription\">\r\n            <Form.Label>Form AÃ§Ä±klamasÄ±:</Form.Label>\r\n            <Form.Control placeholder=\"Form AÃ§Ä±klamasÄ±\" value={formData.description} onChange={(event) => setFormData({ ...formData, description: event.target.value })}/>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"newForm.Feilds\">\r\n            <Form.Label>Alanlar:</Form.Label>\r\n            {formData.fields.length === 0 ? (\r\n              <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", }}>\r\n                <span>HiÃ§ Alan OluÅturmadÄ±n</span>\r\n              </div>\r\n            ) : (\r\n              formData.fields.map((field) => (<FormField key={field.id} fieldData={field} onDelete={handleDeleteField} handleChange={handleFieldChange}/>))\r\n            )}\r\n          </Form.Group>\r\n\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button onClick={() => setFormData({...formData, fields: [...formData.fields, {...EMPTY_FIELD, id: formData.fields.length}]})}>\r\n              Alan Ekle\r\n            </Button>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Kaydet\r\n          </Button>\r\n          <Button onClick={props.onHide}>Kapat</Button>\r\n        </Modal.Footer>\r\n\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateFormModal;","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport SearchBox from \"../components/search-box.component\";\r\nimport FormList from \"../components/form-list.component\";\r\nimport CreateFormModal from \"../components/create-form.component\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nfunction HomePage() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [searchField, setSearchField] = useState(\"\");\r\n  \r\n  const handleChange = (input) => {\r\n    setSearchField(input.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container fluid>\r\n        <Row className=\"mt-5\">\r\n          <Col sm={2} />\r\n          <Col mb={4} className=\"grid-margin\" sm={8}>\r\n            <div className=\"card h-100\">\r\n              <div className=\"card-header\">\r\n                <div className=\"d-flex\">\r\n                  <h4 className=\"mr-auto p-2\">Formlar</h4>\r\n                  <SearchBox placeholder=\"Ara\" handleChange={handleChange} className=\"p-2\"/>\r\n                </div>\r\n              </div>\r\n              <FormList searchField={searchField} />\r\n              <div className=\"card-footer\">\r\n                <Button variant=\"btn btn-primary\" onClick={() => setModalShow(true)} >\r\n                  Yeni Form OluÅtur\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col sm={2} />\r\n        </Row>\r\n      </Container>\r\n      <CreateFormModal show={modalShow} onHide={() => setModalShow(false)} />\r\n    </div>\r\n  );\r\n}\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Col, Container, Row, Button, Form } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FormInstance = ({ match }) => {\r\n  const forms = useSelector((state) => state.formList);\r\n  const selectedForm = forms.formList.filter(\r\n    (form) => form.name.toLowerCase() === match.params.formId\r\n  )[0];\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"mt-5\">\r\n        <Col sm={2} />\r\n        <Col mb={4} className=\"grid-margin\" sm={8}>\r\n          <div className=\"card h-100\">\r\n            <div className=\"card-header\">\r\n              <div className=\"d-flex\">\r\n                <h4 className=\"mr-auto p-2\">{selectedForm.name}</h4>\r\n                <Link to=\"/\"><Button variant=\"secondary\">Geri</Button></Link>\r\n              </div>\r\n            </div>\r\n            <Form>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\">{selectedForm.description}</p>\r\n\r\n                {selectedForm.fields.map((field) => (\r\n                  <FormItem\r\n                    key={field.name}\r\n                    name={field.name}\r\n                    type={field.dataType === \"STRING\" ? \"text\" : \"number\"}\r\n                    isRequired={field.required}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <div className=\"card-footer\">\r\n                <Button variant=\"btn btn-primary\" type=\"submit\" >GÃ¶nder</Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n        <Col sm={2} />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormInstance;\r\n\r\nexport const FormItem = ({ name, type, isRequired }) => {\r\n  return (\r\n    <div>\r\n      <Form.Group controlId={name}>\r\n        <Form.Label>{name}</Form.Label>\r\n        <Form.Control type={type} required={isRequired} />\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport HomePage from \"./home-page.component\";\r\nimport FormInstance from \"../components/form.component\";\r\n\r\nconst FormPage = ({ match, formData }) => {\r\n  console.log(match);\r\n  \r\n  console.log(\"form page rendered\")\r\n  return (\r\n    <div>\r\n      <Route exact path={`${match.path}`} component={HomePage} />\r\n      <Route path={`${match.path}/:formId`} component={FormInstance} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPage;\r\n","import React from \"react\";\nimport HomePage from \"./pages/home-page.component\";\nimport FormPage from \"./pages/form-page.component\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/forms\" component={FormPage} />\n    </Switch>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { formReducer } from './form.reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['formList'],\r\n};\r\n\r\n\r\n// COMBINE REDUCERS\r\nconst rootReducer = combineReducers({\r\n  formList: formReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { FORM_DATA } from \"../data/forms.data\";\r\nimport { FormListActions } from \"./form.actions\";\r\n\r\nexport const formReducer = (state = FORM_DATA, action) => {\r\n  switch (action.type) {\r\n    case FormListActions.CREATE_FORM:\r\n      return {\r\n        ...state,\r\n        formList: [...state.formList, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from './root-reducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middlewares = []\r\n\r\nif(process.env.NODE_ENV==='development'){\r\n          middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor= persistStore(store); //persisted version of store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { HashRouter as BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}